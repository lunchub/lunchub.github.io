<?xml version="1.0" encoding="utf-8"?> <feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[Category: AWS | function Blog() {};]]></title><link href="http://lunchub.github.io/blog/categories/aws/atom.xml" rel="self"/><link href="http://lunchub.github.io/"/> <updated>2013-08-01T21:37:15+09:00</updated> <id>http://lunchub.github.io/</id> <author> <name><![CDATA[Daisuke Masuyama]]></name> </author> <generator uri="http://octopress.org/">Octopress</generator> <entry><title type="html"><![CDATA[Amazon S3のバケット名に"."ドットを含めるとハマる]]></title><link href="http://lunchub.github.io/blog/2013/07/29/hamari-on-s3-bucket-name-with-dots/"/> <updated>2013-07-29T17:05:00+09:00</updated> <id>http://lunchub.github.io/blog/2013/07/29/hamari-on-s3-bucket-name-with-dots</id> <content type="html"><![CDATA[<h2>Precondition</h2><ul><li><a href="http://lunchub.github.io/blog/2013/07/14/how-to-use-carrierwave-with-amazon-s3/">CarrierWaveでアップロード先をAmazon S3に設定する方法</a></li><li><a href="http://lunchub.github.io/blog/2013/07/14/hamari-on-carrierwave-with-amazon-s3/">CarrierWaveからAmazon S3に画像アップロードできない</a></li></ul><h2>Issues</h2><p><code>carrierwave</code> + <code>fog</code>で<code>Amazon S3</code>に画像をアップロードできようになったのはいいものの、<br/> いざ画面に<code>Amazon S3</code>上の画像を表示させようとすると、<br/> 画像が表示されない。</p><h3>Factor</h3><p>バケット名にドット<code>.</code>が含まれていることで、SSLエラーが発生している。<br/> <code>Amazon S3</code>のSSL証明書がワイルドカード<code>*.s3-ap-northeast-1.amazonaws.com</code>だから。<br/> これはレベル3ドメインまでの範囲で、ワイルドカードを使っていいよということなので、<br/> <code>mysite.com.s3-ap-northeast-1.amazonaws.com</code>みたいなことは出来ませんよということ。</p><p><code>サイトドメイン＝バケット名</code>にすればわかりやすいじゃん！<br/> と思っていたらとんでも設定で痛い目に合いました。</p><h2>Solution</h2><p>バケット名にドット<code>.</code>を含めない。</p><h2>References</h2><ul><li><a href="https://github.com/carrierwaveuploader/carrierwave/issues/667">[GitHub] SSL Error when access Amazon S3</a></li><li><a href="http://blog.dateofrock.com/2012/02/s3.html">S3のバケット名はよく考えて命名しましょう！</a></li></ul><p><section class="ads"> </section></p> ]]></content> </entry> <entry><title type="html"><![CDATA[CarrierWaveからAmazon S3に画像アップロードできない]]></title><link href="http://lunchub.github.io/blog/2013/07/14/hamari-on-carrierwave-with-amazon-s3/"/> <updated>2013-07-14T20:18:00+09:00</updated> <id>http://lunchub.github.io/blog/2013/07/14/hamari-on-carrierwave-with-amazon-s3</id> <content type="html"><![CDATA[<h2>Environment</h2><p><code> Mac OSX 10.7.5 (Lion) ruby 1.9.3p392 (2013-02-22 revision 39386) [x86_64-darwin11.4.2] Rails 3.2.13 [Gems] CarrierWave (0.8.0) fog (1.12.1) </code></p><h2>Issues</h2><p><a href="/blog/2013/07/14/how-to-use-carrierwave-with-amazon-s3/">CarrierWaveでアップロード先をAmazon S3に設定する方法</a>等という記事を書いておきながら，<br/> 以下のエラーが表示され，全くアップロードができない．</p><p><code> bad URI(is not URI?) </code></p><h2>Solution</h2><p>Carrierwaveの設定(initializer)を見直す．</p><ul><li><code>fog_credentials</code>の<code>:host</code>と<code>:endpoint</code>は特に指定がない場合はコメントアウトする</li></ul><p>例えば以下の設定ファイルだとエラーで死にます．</p><p>``` ruby config/initializer/carrierwave.rb CarrierWave.configure do |config| config.fog_credentials = {</p><pre><code>:provider               =&gt; 'AWS',                           # required
:aws_access_key_id      =&gt; ENV["AWS_S3_KEY_ID"],            # required
:aws_secret_access_key  =&gt; ENV["AWS_S3_SECRET_ACCESS_KEY"], # required
:region                 =&gt; 'ap-northeast-1',                # optional,  defaults to 'us-east-1'
:host                   =&gt; '',                              # optional,  defaults to nil
:endpoint               =&gt; ''                               # optional,  defaults to nil
</code></pre><p> } config.fog_directory = ‘myapp-carrierwave’ # required config.fog_public = false # optional, defaults to true config.fog_attributes = {‘Cache-Control’=>‘max-age=82800’} # optional, defaults to {} end ```</p><p>これのどこが問題かというと，<code>fog_credentials</code>の<code>:host</code>と<code>:endpoint</code>が<code>empty string</code>であるところ，<br/> ソースのコメントを見ると（元ソースはCarrierWaveのドキュメントから），<br/> optionalと書いてある．<br/> つまりここは何も書かなくても動くんだ！という認識だったのだけど，そこが甘かった．<br/> <code>何も書かなくていい ≠ empty string</code>ということなので，ここには<code>nil</code>を指定するか，<br/> 行ごとコメントアウトしておかなければならない．</p><p>CarrierwaveからFogへのエラースタックを追いかけて行くと，</p><p><code>ruby lib/fog/aws/storage.rb 411 @scheme = options[:scheme] || DEFAULT_SCHEME 412 @port = options[:port] || DEFAULT_SCHEME_PORT[@scheme] 413 @path_style = options[:path_style] || false 414 end 415 416 @connection = Fog::Connection.new("#{@scheme}://#{@host}:#{@port}#{@path}", @persistent, @connection_options) 417 end 418 419 def reload 420 @connection.reset 421 end </code></p><p><code>options</code>で渡ってくる値が<code>nil</code>であれば<code>DEFAULT_</code>値が指定される．<br/> しかしここで<code>empty string</code>が渡ってくると，<code>@scheme</code>等の値が<code>empty string</code>になってしまう．<br/> その結果<code>@connection</code>の組立に失敗して，アップロード先が見つからねーと怒られるみたいです．</p><p>私の場合は，特にこれらの値の指定は不要だったため，<br/> 行ごとコメントアウトしたところ，うまくアップロードできるようになりました！:)</p><h2>References</h2><ul><li><a href="http://stackoverflow.com/questions/15717368/uploading-image-to-s3-using-carrierwave-and-fogs-bad-uri">[Stackoverflow] uploading image to s3 using carrierwave and fogs bad uri</a></li><li><a href="https://github.com/carrierwaveuploader/carrierwave">[GitHub] CarrierWave</a></li></ul><p><section class="ads"><div class="amzimg"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4774146633/lunchub-22/" rel="nofollow" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51%2BUj1CI5tL._SX280_CR0,0,280,230_.jpg" alt="Ruby on Rails 3 アプリケーションプログラミング"/></a></div><div class="amzimg"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4797363827/lunchub-22/" rel="nofollow" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51hvKPIWmdL._SX280_CR2,75,278,230_.jpg" alt="Rails3レシピブック 190の技"/></a></div></section></p> ]]></content> </entry> <entry><title type="html"><![CDATA[CarrierWaveでアップロード先をAmazon S3に設定する方法]]></title><link href="http://lunchub.github.io/blog/2013/07/14/how-to-use-carrierwave-with-amazon-s3/"/> <updated>2013-07-14T17:25:00+09:00</updated> <id>http://lunchub.github.io/blog/2013/07/14/how-to-use-carrierwave-with-amazon-s3</id> <content type="html"><![CDATA[<h2>Environment</h2><p><code> Mac OSX 10.7.5 (Lion) ruby 1.9.3p392 (2013-02-22 revision 39386) [x86_64-darwin11.4.2] Rails 3.2.13 [Gems] CarrierWave (0.8.0) fog (1.12.1) </code></p><h2>Precondition</h2><ul><li><p><code>Amazon S3</code>を利用するためには，<code>Amazon Web Services (AWS)</code>への登録が必要です．</p><ul><li><a href="/blog/2013/07/13/how-to-register-for-aws/">AWSへの登録記事はこちら</a></li></ul></li><li><p><code>CarrierWave</code>の設定時に，<code>Amazon S3</code>のBucket情報が必要なため，Bucketが作成されていなければなりません．</p><ul><li><a href="/blog/2013/07/14/how-to-create-bucket-on-amazon-s3/">Amazon S3にBucketを作成する方法はこちら</a></li></ul></li></ul><h2>Issues</h2><p>CarrierWaveのアップロード先をAmazon S3に設定したい．</p><p>Herokuを使ってRailsアプリを運用しているものの, Herokuではファイルをサーバ上に保存することができないため，<br/> 画像アップロード等は別のサーバに行う必要があります．<br/> そこで今回は，非常に低価格でクラウドストレージを扱うことのできる<code>Amazon S3</code>をアップロード先に指定しました．</p><h2>How to</h2><h3>Gemを追加する</h3><p><code>text Gemfile gem "fog", "~&gt; 1.3.1" </code></p><h3>initializerを追加する</h3><p>ここに<code>Amazon S3</code>の情報を設定します．<br/> ``` ruby config/initializer/carrierwave.rb CarrierWave.configure do |config| config.fog_credentials = {</p><pre><code>:provider               =&gt; 'AWS',                           # required
:aws_access_key_id      =&gt; ENV["AWS_S3_KEY_ID"],            # required
:aws_secret_access_key  =&gt; ENV["AWS_S3_SECRET_ACCESS_KEY"], # required
:region                 =&gt; 'ap-northeast-1',                # optional,  defaults to 'us-east-1'
# :host                   =&gt; '',                              # optional,  defaults to nil
# :endpoint               =&gt; ''                               # optional,  defaults to nil
</code></pre><p> } config.fog_directory = ‘myapp-carrierwave’ # required config.fog_public = false # optional, defaults to true config.fog_attributes = {‘Cache-Control’=>‘max-age=82800’} # optional, defaults to {} end ```</p><ul><li>IDとシークレットアクセスキーは，環境変数に設定しておいたほうが良いです．<ul><li>ベタ書きだとGitHubにソースコードをアップしている際等に危険です．</li></ul></li><li><code>:region</code>の入力は任意ですが，'tokyo'リージョンを使用している場合は変更が必要です． => <code>ap-northeast-1</code></li><li><code>config.fog_directory</code>はBucketの名前です．</li><li><code>config.fog_public</code>は<code>false</code>に設定しておくことで，Rails経由でのアクセスしか<code>Amazon S3</code>上のファイルにアクセスできなくなります．</li></ul><h3>Uploaderクラスのプロパティ値を変更する</h3><p>``` ruby APP_ROOT_PATH/app/uploaders/image_uploader.rb</p><h1>encoding: utf-8</h1><p>class ImageUploader &lt; CarrierWave::Uploader::Base # storage :file storage :fog end ```</p><h2>References</h2><p><a href="https://github.com/carrierwaveuploader/carrierwave">[GitHub] carrierwave</a></p><p><section class="ads"><div class="amzimg"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4774146633/lunchub-22/" rel="nofollow" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51%2BUj1CI5tL._SX280_CR0,0,280,230_.jpg" alt="Ruby on Rails 3 アプリケーションプログラミング"/></a></div><div class="amzimg"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4797363827/lunchub-22/" rel="nofollow" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51hvKPIWmdL._SX280_CR2,75,278,230_.jpg" alt="Rails3レシピブック 190の技"/></a></div></section></p> ]]></content> </entry> <entry><title type="html"><![CDATA[AWSのアクセス情報を確認する方法]]></title><link href="http://lunchub.github.io/blog/2013/07/14/how-to-confirm-aws-access-information/"/> <updated>2013-07-14T15:25:00+09:00</updated> <id>http://lunchub.github.io/blog/2013/07/14/how-to-confirm-aws-access-information</id> <content type="html"><![CDATA[<h2>Scribble</h2><ul><li><code>AWS Management Console</code>にサインインし，ページ右上のメニューから<code>Security Credentials</code>をクリックする</li></ul><p><a href="/images/posts/2013/07/2013-07-14-15-24-27.jpg"><img src="/images/posts/2013/07/2013-07-14-15-24-27.jpg" alt="AWS アクセス情報確認 step1"/></a></p><ul><li><code>Access Keys</code>を開き，<code>Create New Root Key</code>をクリックする</li></ul><p><a href="/images/posts/2013/07/2013-07-14-15-42-34.jpg"><img src="/images/posts/2013/07/2013-07-14-15-42-34.jpg" alt="AWS アクセス情報確認 step2"/></a></p><p><a href="/images/posts/2013/07/2013-07-14-15-44-10.jpg"><img src="/images/posts/2013/07/2013-07-14-15-44-10.jpg" alt="AWS アクセス情報確認 step3"/></a></p><ul><li>ポップアップウインドウが開き，キーファイルをダウンロードするよう求められるので，ダウンロードする<ul><li>ここでダウンロードしないと，後からシークレットアクセスキーを確認しようと思っても出来ない</li><li>ダウンロードしたファイルは厳重に管理する</li></ul></li></ul><p><a href="/images/posts/2013/07/2013-07-14-16-14-10.jpg"><img src="/images/posts/2013/07/2013-07-14-16-14-10.jpg" alt="AWS アクセス情報確認 step4"/></a></p><p><section class="ads"> </section></p> ]]></content> </entry> <entry><title type="html"><![CDATA[Amazon S3にBucket（ストレージ）を作成する方法]]></title><link href="http://lunchub.github.io/blog/2013/07/14/how-to-create-bucket-on-amazon-s3/"/> <updated>2013-07-14T13:24:00+09:00</updated> <id>http://lunchub.github.io/blog/2013/07/14/how-to-create-bucket-on-amazon-s3</id> <content type="html"><![CDATA[<h2>Precondition</h2><p><code>Amazon S3</code>を利用するためには，<code>Amazon Web Services (AWS)</code>への登録が必要です．</p><p><a href="/blog/2013/07/13/how-to-register-for-aws/">AWSへの登録記事はこちら</a></p><h2>How to</h2><ul><li><p><a href="https://console.aws.amazon.com/console/home">AWS Management Console</a>にアクセスする</p></li><li><p><code>S3</code>を選択する</p></li></ul><p><a href="/images/posts/2013/07/2013-07-14-13-35-24.jpg"><img src="/images/posts/2013/07/2013-07-14-13-35-24.jpg" alt="S3 を選択する"/></a></p><ul><li><code>Create Bucket</code>をクリックする</li></ul><p><a href="/images/posts/2013/07/2013-07-14-13-38-30.jpg"><img src="/images/posts/2013/07/2013-07-14-13-38-30.jpg" alt="Create Bucket Button"/></a></p><ul><li>ポップアップパネルが開くので，作成したいBucketの名前と，リージョンを選択する<ul><li>ここでは<code>Tokyo</code>リージョンを選択</li><li><code>Create</code>をクリックする</li></ul></li></ul><p><a href="/images/posts/2013/07/2013-07-14-13-40-09.jpg"><img src="/images/posts/2013/07/2013-07-14-13-40-09.jpg" alt="Create Bucket PopUp"/></a></p><ul><li>作成に成功すると，Bucketの一覧画面へ遷移する<ul><li>今作成したBucketが表示されていることがわかる</li></ul></li></ul><p><a href="/images/posts/2013/07/2013-07-14-13-45-28.jpg"><img src="/images/posts/2013/07/2013-07-14-13-45-28.jpg" alt=""/></a></p><h2>Recommended</h2><ul><li><code>Rails</code> + <code>Carrierwave</code> でアップロード先を<code>Amazon S3</code>に設定したい<ul><li><a href="/blog/2013/07/14/how-to-use-carrierwave-with-amazon-s3">CarrierWaveでアップロード先をAmazon S3に設定する方法</a></li></ul></li></ul><p><section class="ads"> </section></p> ]]></content> </entry> </feed>