<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | function Blog() {};]]></title>
  <link href="http://lunchub.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://lunchub.github.io/"/>
  <updated>2013-09-17T21:23:04+09:00</updated>
  <id>http://lunchub.github.io/</id>
  <author>
    <name><![CDATA[Daisuke Masuyama]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopressで記事の生成を高速化する方法]]></title>
    <link href="http://lunchub.github.io/blog/2013/09/13/how-to-improve-generating-a-post-faster-on-octopress/"/>
    <updated>2013-09-13T21:45:00+09:00</updated>
    <id>http://lunchub.github.io/blog/2013/09/13/how-to-improve-generating-a-post-faster-on-octopress</id>
    <content type="html"><![CDATA[<h2>Issues</h2>

<p><code>Octopress</code>で新しい記事を作成したり、既存の記事の編集の際に、<code>rake preview</code>や<code>rake generate</code>の実行に非常に時間が
かかってしまい、編集の効率が悪い。</p>

<h3>Factor</h3>

<p><code>Octopress</code>は、<code>preview</code>や<code>generate</code>の際、<code>source/_posts</code>配下にある記事を全て静的なHTMLへと再生成してしまうため。
記事の数が増えるほど、生成にかかる時間が増してしまうため。</p>

<h2>Solution</h2>

<ul>
<li><code>rake isolate[filename]</code>と、<code>rake integrate</code>を使用する</li>
</ul>


<h2>How to</h2>

<h3><code>rake isolate[filename]</code>と、<code>rake integrate</code>を使用する</h3>

<h4>rake isolate[filename]</h4>

<p><code>rake isolate[filename]</code>は、<code>filename</code>に指定したファイル名と一致しない記事ファイルを、
全て<code>source/_stash</code>に退避してくれる。これにより、<code>preview</code>や<code>generate</code>の際、生成のために参照する記事数が
圧倒的に少なくなるため、生成に要する時間が短縮される。</p>

<p>この<code>filename</code>に指定するファイル名は部分一致が可能なので、ファイル名をフルで指定する必要はない。
例えばこの記事のファイル名は<code>2013-09-13-how-to-improve-generating-a-post-faster-on-octopress.markdown</code>なので、
<code>faster-on-octopress</code>とでも指定しておけば問題ない。</p>

<h4>rake integrate</h4>

<p><code>rake integrate</code>は前述の<code>rake isolate[filename]</code>で退避したファイルを全て<code>source/_posts</code>に戻してくれる。</p>

<h2>Conclusion</h2>

<p>新規記事の作成や、記事の更新の手順は以下の通り。</p>

<p><code>
新規記事 or 更新対象記事 のファイル名（filename）を確認する。
↓
rake isolate[filename]
↓
rake preview や rake generate を使用しながら対象記事を編集する
↓
rake integrate
↓
rake gen_deploy
</code></p>

<p>この方法はあくまで「新規記事の作成」と「記事の更新」を高速化するものなので、
記事の生成処理自体が早くなるわけではなく、最終的な<code>rake gen_deploy</code>は早くならないのが微妙なところ。</p>

<p>一応別の記事で解説予定の、「高速化パッチの当たったRuby」を使用することで生成速度はだいぶ改善される。</p>

<h2>Mutter</h2>

<p>記事のタイムスタンプをチェックするとかで、この回避策使わなくていいようにできないのかなあ・・<br/>
差分がなければスルーして欲しいところ。</p>

<h2>References</h2>

<p><section class="ads">
</section></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressでテンプレートタグをエスケープする方法]]></title>
    <link href="http://lunchub.github.io/blog/2013/06/11/how-to-espace-jekyll-template-tag/"/>
    <updated>2013-06-11T18:57:00+09:00</updated>
    <id>http://lunchub.github.io/blog/2013/06/11/how-to-espace-jekyll-template-tag</id>
    <content type="html"><![CDATA[<h2>Issues</h2>

<p>OctopressでJekyllテンプレートのコードブロックを表示する際、<br/>
Jekyllのテンプレートタグが非表示になってしまう。</p>

<h2>Solution</h2>

<h3>エスケープタグを使う</h3>

<p>
```
{% \raw %}
エスケープしたいソース
{% \endraw %}</p>

<p>*rawの前のバックスラッシュは不要です。（rawのエスケープができないので仕方なく・・）
```
</p>

<p>Jekyllの公式ドキュメントがわかりづらくて探せなかった・・<br/>
やっぱりStackoverflowは便利。</p>

<h2>References</h2>

<p>
<a href="http://stackoverflow.com/questions/15786144/how-to-escape-in-markdown-on-octopress">How to escape {{ in markdown on Octopress?</a>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OctopressにDISQUSのコメントウィジェットを設置する方法]]></title>
    <link href="http://lunchub.github.io/blog/2013/06/11/how-to-add-disqus-s-recent-comments-widget-on-octopress/"/>
    <updated>2013-06-11T18:27:00+09:00</updated>
    <id>http://lunchub.github.io/blog/2013/06/11/how-to-add-disqus-s-recent-comments-widget-on-octopress</id>
    <content type="html"><![CDATA[<h2>Issues</h2>

<p>OctopressのサイドバーにDISQUSの最近のコメント一覧を表示させたい。</p>

<h2>Solution</h2>

<p>以下の手順で設置できたのでメモ。</p>

<h3>サイドバー表示用HTMLの作成</h3>

<p>
``` html custom/asides/disqus_recent_comments.html
{% if site.disqus_short_name %}
<section>
  <h1>Recent Comments</h1>
  <div id="dsq-recentcomments" class="dsq-widget"></p>

<pre><code>&lt;script type="text/javascript" src="http://disqus.com/forums/{{ site.disqus_short_name }}/recent_comments_widget.js?hide_avatars=0"&gt;&lt;/script&gt;
</code></pre>

<p>  </div>
</section>
{% endif %}
```
</p>

<h3>_config.ymlの編集</h3>

<p>``` yml _config.yml</p>

<h1>サイドバー上の表示させたい位置に差し込む</h1>

<p>default_asides:[&hellip;.., custom/asides/disqus_recent_comments.html]</p>

<h1>DISQUSのフォーラム名を設定する</h1>

<p>disqus_short_name: lunchub
```</p>

<h3>オプション</h3>

<p>基本的に上記手順で表示できるが、いくつかオプションがある模様。<br/>
JavaScriptの呼び出しクエリに適宜付加してください。</p>

<ul>
<li>hide_avatars :

<ul>
<li>アバターを表示させないか（<code>1</code>だと非表示、<code>0</code>だと表示）</li>
<li>自分のコメントは<code>1</code>にすると見えなくなるっぽい？</li>
</ul>
</li>
<li>num_items :

<ul>
<li>コメントを何件表示させるか</li>
</ul>
</li>
<li>excerpt_length :

<ul>
<li>コメントの最大表示文字数</li>
</ul>
</li>
</ul>


<h2>References</h2>

<p><a href="http://fusion94.org/blog/2013/01/11/recent-comments-as-an-asides/">Recent Comments as an Asides</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressで関連エントリを表示する方法]]></title>
    <link href="http://lunchub.github.io/blog/2013/06/07/how-to-show-related-posts-in-octopress/"/>
    <updated>2013-06-07T12:15:00+09:00</updated>
    <id>http://lunchub.github.io/blog/2013/06/07/how-to-show-related-posts-in-octopress</id>
    <content type="html"><![CDATA[<h2>Issues</h2>

<p>参考サイトの手順通りにプラグインを導入しても、<br/>
関連エントリが表示されない。</p>

<h2>Solution</h2>

<p>プラグインの仕様が変わっていました・・ｗ<br/>
<a href="https://github.com/LawrenceWoodman/related_posts-jekyll_plugin/commit/bcef5ff59e038d3276c66f710ba2ccc99a9a495e">[GitHub] Switch from categories to tags</a><br/>
カテゴリではなく、タグを使って関連エントリを探してくるように変更されたようです。<br/>
なので、tagsにキーワードを登録していけば問題なく関連エントリが表示されます。</p>

<p>カテゴリだと大雑把すぎるということなのかな・・？</p>

<h2>References</h2>

<ul>
<li><a href="http://blog.glidenote.com/blog/2012/01/04/octopress-related-posts/">OctopressでRelated Posts(関連エントリー)を表示させるようにした</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
