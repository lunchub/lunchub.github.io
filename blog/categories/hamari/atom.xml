<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: hamari | function Blog() {};]]></title>
  <link href="http://lunchub.github.io/blog/categories/hamari/atom.xml" rel="self"/>
  <link href="http://lunchub.github.io/"/>
  <updated>2013-06-20T16:26:10+09:00</updated>
  <id>http://lunchub.github.io/</id>
  <author>
    <name><![CDATA[Daisuke Masuyama]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[uninitialized constant Readline (NameError)]]></title>
    <link href="http://lunchub.github.io/blog/2013/06/20/uninitialized-constant-readline-nameerror/"/>
    <updated>2013-06-20T15:56:00+09:00</updated>
    <id>http://lunchub.github.io/blog/2013/06/20/uninitialized-constant-readline-nameerror</id>
    <content type="html"><![CDATA[<h2>Environment</h2>

<p>```
Mac OSX 10.7.5 (Lion)
ruby 1.9.3p392 (2013-02-22 revision 39386) [x86_64-darwin11.4.2]
Rails 3.2.13
[Gems]
rb-readline (0.5.0)</p>

<p>debugger (1.3.1)
  columnize (>= 0.3.1)
  debugger-linecache (~> 1.1.1)
  debugger-ruby_core_source (~> 1.1.8)
debugger-linecache (1.1.2)
  debugger-ruby_core_source (>= 1.1.1)
debugger-ruby_core_source (1.1.9)
```</p>

<h2>Issues</h2>

<p><code>rails c</code>しようとすると、<code>uninitialized constant Debugger::LocalInterface::Readline (NameError)</code>と<br/>
表示されてコンソールに入れなくなっていた。</p>

<p>エラー内容から、<code>debugger</code>の問題を疑い、<code>Gemfile</code>から外してみる。<br/>
すると今度は<code>pry</code>が<code>Debugger</code>の部分だけ<code>Pry</code>に変わっただけの同じエラーが出力される。<br/>
そこで<code>pry</code>を<code>Gemfile</code>から外し・・・ｒｙ</p>

<p>これを繰り返しても同じエラーが続く・・・<br/>
どうやら共通して<code>readline</code>に問題があるらしい。</p>

<p>システムに<code>readline</code>がインストールされていないのかと思ったが、<br/>
<code>homebrew</code>でちゃんとインストールしてある・・</p>

<p><code>Gemfile</code>を眺めていると、<code>rb-readline</code>なるものが追加されている。<br/>
どうやらこいつが怪しい・・・</p>

<h2>Solution</h2>

<p>で、解決策は2つ</p>

<ul>
<li><code>rb-readline</code>のバージョン指定を<code>'~&gt; 0.4.2'</code>にする</li>
<li><code>rb-readline</code>を削除する（）</li>
</ul>


<p>問題は<code>rb-readline</code>が<code>0.5.0</code>からシステム上の<code>readline</code>を<code>remove_const</code>しちゃうこと。<br/>
どうもこのgemはC言語で実装された<code>readline</code>とは別に、<br/>
Rubyだけで完結させようって主旨なのかな？<br/>
それで既に<code>readline</code>があると再定義の警告が出るんで、<br/>
一度<code>remove_const</code>しちゃうぜってことらしい。<br/>
しかし他のgemのエラーからして、明らかにシステム上に<code>readline</code>があることを期待している気がする・・。<br/>
これってどうなんだろう・・。<br/>
一応<code>Readline</code>を呼んでいるgemを全て<code>RbReadline</code>に置換すれば動くっぽいけど・・ｗ</p>

<h3><code>rb-readline</code>のバージョン指定を<code>'~&gt; 0.4.2'</code>にする</h3>

<p>前述の<code>remove_const</code>が入るのはバージョン<code>0.5.0</code>から。<br/>
なので、この変更が入る前の<code>0.4.2</code>にしてあげればエラーはなくなる。</p>

<h3><code>rb-readline</code>を削除する（）</h3>

<p>こちらはシステム上に<code>readline</code>がインストールされていて、<br/>
かつRubyのビルドオプションで<code>--with-readline</code>をつけてビルドしている場合に有効。
システム上の<code>readline</code>を使ってくれるので<code>rb-readline</code>は不要になります。</p>

<p>ちなみにMacなら
<code>
brew install readline
CONFIGURE_OPTS="--disable-install-doc --with-readline-dir=$(brew --prefix readline)" rbenv install $VERSION
</code>
でビルドしなおせばOK!<br/>
<code>$VERSION</code>はお好みで。</p>

<h2>References</h2>

<ul>
<li><a href="https://github.com/luislavena/rb-readline/commit/d8b49a061eeb710c47bc92cc610e8f489c4fd447">[GitHub] Unload Readline before loading rb-readline</a></li>
<li><a href="http://stackoverflow.com/questions/16288331/rails-3-uninitialized-constant-irbreadlineinputmethodreadline-nameerror-i">[stackoverflow] Rails 3: uninitialized constant IRB::ReadlineInputMethod::Readline (NameError) in Heroku</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Rails] Active_adminのインストールと初期設定でハマったこと]]></title>
    <link href="http://lunchub.github.io/blog/2013/06/17/hamari-install-activeadmin-gem-to-rails/"/>
    <updated>2013-06-17T12:43:00+09:00</updated>
    <id>http://lunchub.github.io/blog/2013/06/17/hamari-install-activeadmin-gem-to-rails</id>
    <content type="html"><![CDATA[<h2>Environment</h2>

<p><code>
Mac OSX 10.7.5 (Lion)
ruby 1.9.3p392 (2013-02-22 revision 39386) [x86_64-darwin11.4.2]
Rails 3.2.13
[gems]
jquery-rails (3.0.1)
jquery-ui-rails (4.0.3)
activeadmin (0.6.0)
</code></p>

<h2>Issues</h2>

<p>手っ取り早く管理画面を設置したくて<code>activeadmin</code>をインストールしたところ、<br/>
初っ端からコケまくった。</p>

<h3>&ldquo;uninitialized constant DashboardController&rdquo;</h3>

<p><code>rails g active_admin:install</code>してとりあえず見るかーと、<br/>
トップページアクセスしたら出るエラー。</p>

<h3>&ldquo;couldn&rsquo;t find file &lsquo;jquery-ui&rsquo;&rdquo;</h3>

<p><code>jQuery UI</code>が見つからないエラー。<br/>
いや、gemでバッチリ指定して入れてるのに・・・<br/>
こっちがだいぶハマった。</p>

<h2>Solution</h2>

<h3>&ldquo;uninitialized constant DashboardController&rdquo;</h3>

<p>これは<code>routes.rb</code>の書き方が問題らしい。</p>

<p><code>activeadmin</code>をインストールすると、<code>routes.rb</code>に以下のコードが追加されるのだけど、</p>

<p><code>ruby routes.rb
devise_for :admin_users, ActiveAdmin::Devise.config
ActiveAdmin.routes(self)
</code></p>

<p>これが<code>routes.rb</code>の中で、rootパスより前にあるとダメらしい・・ｗ<br/>
なので、rootパスの記述を上記コードより上に持ってくればOK。</p>

<p>``` ruby routes.rb
root :to => &lsquo;index#index&rsquo;</p>

<p>devise_for :admin_users, ActiveAdmin::Devise.config
ActiveAdmin.routes(self)
```</p>

<h3>&ldquo;couldn&rsquo;t find file &lsquo;jquery-ui&rsquo;&rdquo;</h3>

<p>問題は、</p>

<ul>
<li><code>activeadmin</code>が<code>jQuery</code>と<code>jQuery UI</code>を使用する</li>
<li><code>jquery-rails, 3.0.0</code>から<code>jQuery UI</code>が切り離された</li>
<li><code>activeadmin</code>の<code>application.js</code>内で<code>jQuery UI</code>の呼び方が間違っている</li>
</ul>


<h4><code>activeadmin</code>が<code>jQuery</code>と<code>jQuery UI</code>を使用する</h4>

<p>独自に<code>application.js</code>から<code>jQuery</code>と<code>jQuery UI</code>を呼んでいる</p>

<h4><code>jquery-rails, 3.0.0</code>から<code>jQuery UI</code>が切り離された</h4>

<p>フォルダに存在しないものをimportしようとして見つかりませんエラーのパターン。<br/>
エラーメッセージでググるとほぼこれに当たる。<br/>
そして解決策が<code>jquery-rails</code>のバージョンを<code>2.3.0</code>に下げろというもの。<br/>
要するに<code>jQuery UI</code>が切り離される前のバージョンにしろってことなんだけど、<br/>
自分の場合はこれではうまくいかなかった。</p>

<h4><code>activeadmin</code>の<code>application.js</code>内で<code>jQuery UI</code>の呼び方が間違っている</h4>

<p>結局自分の場合はこれが問題だった。<br/>
下のソースを見ると、<code>jquery-ui</code>を呼んでいるのだけど、<br/>
これだと名前が解決できないようで、呼び出せない。
``` js /path/to/rails_app/vendor/bundle/ruby/1.9.1/gems/activeadmin-0.6.0/app/assets/javascripts/active_admin/base.js
//= require jquery
//= require jquery-ui
//= require jquery_ujs</p>

<p>//= require active_admin/application
```</p>

<p>そこで、<code>jquery-ui-rails</code>の<a href="https://github.com/joliss/jquery-ui-rails">Githubドキュメント</a>を読むと、
``` text
To require all jQuery UI modules,  add the following to your application.js:</p>

<p>//= require jquery.ui.all
```
と書いてある。
先程とは呼び方が異なっている。</p>

<p>なので、Gemのassetsの中身を直接書き換え、以下のように変更したところ動くようになった。
``` js /path/to/rails_app/vendor/bundle/ruby/1.9.1/gems/activeadmin-0.6.0/app/assets/javascripts/active_admin/base.js
//= require jquery
//= require jquery.ui.all
//= require jquery_ujs</p>

<p>//= require active_admin/application
```</p>

<h2>モンキーパッチの当て方がわかりませんorz</h2>

<p>上記の<code>jQuery UI</code>を呼び出す方法を変更する修正だけど、<br/>
直接Gemのファイルいじるのは間違いなくバッドノウハウのはず。<br/>
だからモンキーパッチを当てておきたいのだけど、<br/>
ググって出てくる方法はクラスをオーバーライドするものばかりで、<br/>
assetsの中身を書き換えたい場合はどうすればいいんだろう？<br/>
誰か知っていたら教えて下さい＞＜；</p>

<h2>References</h2>

<ul>
<li><a href="http://stackoverflow.com/questions/15818446/active-admin-ruby-on-rails-dashboard-controller-error">Active Admin Ruby on rails Dashboard Controller Error</a></li>
<li><a href="https://github.com/joliss/jquery-ui-rails">[Gem] jquery-ui-rails</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CoffeeScript メモ]]></title>
    <link href="http://lunchub.github.io/blog/2013/06/10/hamari-on-coffeescript/"/>
    <updated>2013-06-10T17:23:00+09:00</updated>
    <id>http://lunchub.github.io/blog/2013/06/10/hamari-on-coffeescript</id>
    <content type="html"><![CDATA[<h2>Environment</h2>

<p><code>
Mac OSX 10.7.5 (Lion)
CoffeeScript version 1.6.3
</code></p>

<h2>Tips</h2>

<h3>if文評価後の処理の書き方</h3>

<h4>if の前に書く</h4>

<p>``` coffeescript before if</p>

<h1>pattern 1: put defiend function name</h1>

<p>a_function &ndash;>
  alert &lsquo;test!&rsquo;
  console.log &lsquo;fired!&rsquo;;
  return</p>

<p>$(&lsquo;#target&rsquo;)
  .on &lsquo;keyup&rsquo;, (e) &ndash;></p>

<pre><code>a_function if e.which is 13
</code></pre>

<h1>pattern 2: wrap with () and separate row by ;</h1>

<p>$(&lsquo;#target&rsquo;)
  .on &lsquo;keyup&rsquo;, (e) &ndash;></p>

<pre><code>(alert 'test!';console.log 'fired!';return) if e.which is 13
</code></pre>

<p>```</p>

<h4>if の次の行からインデントして書く</h4>

<p>``` coffeescript after if
$(&lsquo;#target&rsquo;)
  .on &lsquo;keyup&rsquo;, (e) &ndash;></p>

<pre><code>if e.which is 13
  alert 'test!' 
  console.log 'fired!'
  return
</code></pre>

<p>```</p>

<p>出力後の結果はそれぞれ同じになる。<br/>
前者は<code>if</code>の前を関数として評価しているのだろうか。<br/>
直感的なのは後者のやり方かなあ。<br/>
booleanの返却程度の簡単な処理なら1行にできる前者でも良いか。</p>

<p>変換後のソースチェックはここでできます。 &ndash;> <a href="http://js2coffee.org/">js2coffee</a></p>

<h2>References</h2>
]]></content>
  </entry>
  
</feed>
