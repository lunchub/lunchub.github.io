<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: CSS3 | function Blog() {};]]></title>
  <link href="http://lunchub.github.io/blog/categories/css3/atom.xml" rel="self"/>
  <link href="http://lunchub.github.io/"/>
  <updated>2013-06-21T16:28:16+09:00</updated>
  <id>http://lunchub.github.io/</id>
  <author>
    <name><![CDATA[Daisuke Masuyama]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GitHubが使っているちょっとしたCSSのテクニック]]></title>
    <link href="http://lunchub.github.io/blog/2013/06/14/github-s-small-css-trick/"/>
    <updated>2013-06-14T16:16:00+09:00</updated>
    <id>http://lunchub.github.io/blog/2013/06/14/github-s-small-css-trick</id>
    <content type="html"><![CDATA[<h2>Scribble</h2>

<h3>Summary</h3>

<p>GitHubを眺めていてちょっとしたCSSのテクニックを発見した。<br/>
ページ上部のアイコンのそばに表示されているPUBLICという文字列がある。<br/>
この文字列が、画面サイズ（横）によって横書き&lt;&ndash;>縦書きと変化する。</p>

<p><a href="/images/posts/2013/06/2013-06-14-16-59-42.jpg"><img src="/images/posts/2013/06/2013-06-14-16-59-42.jpg" alt="GitHub css trick1" /></a></p>

<p>が、画面サイズ（横）を小さくすると・・</p>

<p><a href="/images/posts/2013/06/2013-06-14-17-01-27.jpg"><img src="/images/posts/2013/06/2013-06-14-17-01-27.jpg" alt="GitHub css trick1" /></a></p>

<p>になるｗ <code>ヒュッ</code>っというエフェクト付きで・・ｗ<br/>
CSS3かJavaScript使ってるんだろうなーと理解したけど、<br/>
こういう細かい所まで凝っていて思わず楽しくなったｗ</p>

<p>で、実際にどうやっているのか調べてみた。</p>

<h3>Conclusion</h3>

<p>ソースを見ると、CSSのみで実装されていることがわかる。<br/>
実装のキモは、</p>

<ul>
<li>Media Queries</li>
<li><code>transform</code>プロパティ</li>
<li><code>transition</code>プロパティ</li>
</ul>


<p>の3点だと思う。
仕組みとしては、</p>

<ul>
<li>画面サイズ（横）が<code>1075px</code>より大きい場合は基本CSSが呼ばれるだけ</li>
<li>画面サイズ（横）が<code>1075px</code>以下になると、<br/>
Media Queriesで指定されているプロパティでオーバーライドされる

<ul>
<li>その際<code>transition</code>で指定した、ベジエ曲線と所要時間に従い、<br/>
変更の発生したプロパティ<code>transform</code>のアニメーションが実行される</li>
</ul>
</li>
</ul>


<p>ということかな。</p>

<p><code>transition</code>の第一引数にはアニメーションを実行するプロパティを指定できる。<br/>
<code>all</code>にすると対応している全てのプロパティにおいて、<br/>
アニメーションの実行が適用される。<br/>
ここで指定されていないプロパティは即座に変更が反映される。<br/>
これってオブザーバの仕組みっぽいな・・？とか妄想。</p>

<p>以下ソース。</p>

<p><code>html html
&lt;span class="repo-label"&gt;&lt;span&gt;public&lt;/span&gt;&lt;/span&gt;
</code></p>

<p><code>css 基本css
.pagehead.repohead span.repo-label {
  position: absolute;
  top: 15px;
  left: -75px;
  width: 65px;
  margin-top: -14px;
  text-align: right;
  font-size: 11px;
  text-transform: uppercase;
  color: #b9b9b9;
  font-weight: 300;
  letter-spacing: 0px;
  text-shadow: none;
  transition: all 0.4s ease-in-out;
  -webkit-transition: all 0.4s ease-in-out 0;
}
</code></p>

<p>``` css Media Queries指定CSS
@media only screen and (max-width 1075px) {
  .pagehead.repohead span.repo-label
  {</p>

<pre><code>transform:rotate(-90deg);
-webkit-transform:rotate(-90deg);
-moz-transform:rotate(-90deg);
-o-transform:rotate(-90deg);
-ms-transform:rotate(-90deg);
filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
top:30px;
left:-46px;
</code></pre>

<p>  }
}
```</p>

<h2>References</h2>

<ul>
<li><a href="https://developer.mozilla.org/ja/docs/Web/Guide/CSS/Using_CSS_transitions">[MDN] CSS transition の使用</a></li>
<li><a href="http://oli.jp/2010/css-animatable-properties/">transitionで指定できるプロパティ一覧</a></li>
<li><a href="http://www.w3.org/TR/css3-transitions/">[W3C] CSS Transitions</a></li>
<li><a href="https://developer.mozilla.org/ja/docs/Web/Guide/CSS/Using_CSS_transforms">[MDN] CSS transforms の利用</a></li>
<li><a href="http://www.css-lecture.com/log/css3/css3-transform.html">CSS3 変形処理を行う transform プロパティ</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
