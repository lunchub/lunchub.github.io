<?xml version="1.0" encoding="utf-8"?> <feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[Category: Rails | function Blog() {};]]></title><link href="http://lunchub.github.io/blog/categories/rails/atom.xml" rel="self"/><link href="http://lunchub.github.io/"/> <updated>2013-07-16T20:33:16+09:00</updated> <id>http://lunchub.github.io/</id> <author> <name><![CDATA[Daisuke Masuyama]]></name> </author> <generator uri="http://octopress.org/">Octopress</generator> <entry><title type="html"><![CDATA[CarrierWaveからAmazon S3に画像アップロードできない]]></title><link href="http://lunchub.github.io/blog/2013/07/14/hamari-on-carrierwave-with-amazon-s3/"/> <updated>2013-07-14T20:18:00+09:00</updated> <id>http://lunchub.github.io/blog/2013/07/14/hamari-on-carrierwave-with-amazon-s3</id> <content type="html"><![CDATA[<h2>Environment</h2><p><code> Mac OSX 10.7.5 (Lion) ruby 1.9.3p392 (2013-02-22 revision 39386) [x86_64-darwin11.4.2] Rails 3.2.13 [Gems] CarrierWave (0.8.0) fog (1.12.1) </code></p><h2>Issues</h2><p><a href="/blog/2013/07/14/how-to-use-carrierwave-with-amazon-s3/">CarrierWaveでアップロード先をAmazon S3に設定する方法</a>等という記事を書いておきながら，<br/> 以下のエラーが表示され，全くアップロードができない．</p><p><code> bad URI(is not URI?) </code></p><h2>Solution</h2><p>Carrierwaveの設定(initializer)を見直す．</p><ul><li><code>fog_credentials</code>の<code>:host</code>と<code>:endpoint</code>は特に指定がない場合はコメントアウトする</li></ul><p>例えば以下の設定ファイルだとエラーで死にます．</p><p>``` ruby config/initializer/carrierwave.rb CarrierWave.configure do |config| config.fog_credentials = {</p><pre><code>:provider               =&gt; 'AWS',                           # required
:aws_access_key_id      =&gt; ENV["AWS_S3_KEY_ID"],            # required
:aws_secret_access_key  =&gt; ENV["AWS_S3_SECRET_ACCESS_KEY"], # required
:region                 =&gt; 'ap-northeast-1',                # optional,  defaults to 'us-east-1'
:host                   =&gt; '',                              # optional,  defaults to nil
:endpoint               =&gt; ''                               # optional,  defaults to nil
</code></pre><p> } config.fog_directory = ‘myapp-carrierwave’ # required config.fog_public = false # optional, defaults to true config.fog_attributes = {‘Cache-Control’=>‘max-age=82800’} # optional, defaults to {} end ```</p><p>これのどこが問題かというと，<code>fog_credentials</code>の<code>:host</code>と<code>:endpoint</code>が<code>empty string</code>であるところ，<br/> ソースのコメントを見ると（元ソースはCarrierWaveのドキュメントから），<br/> optionalと書いてある．<br/> つまりここは何も書かなくても動くんだ！という認識だったのだけど，そこが甘かった．<br/> <code>何も書かなくていい ≠ empty string</code>ということなので，ここには<code>nil</code>を指定するか，<br/> 行ごとコメントアウトしておかなければならない．</p><p>CarrierwaveからFogへのエラースタックを追いかけて行くと，</p><p><code>ruby lib/fog/aws/storage.rb 411 @scheme = options[:scheme] || DEFAULT_SCHEME 412 @port = options[:port] || DEFAULT_SCHEME_PORT[@scheme] 413 @path_style = options[:path_style] || false 414 end 415 416 @connection = Fog::Connection.new("#{@scheme}://#{@host}:#{@port}#{@path}", @persistent, @connection_options) 417 end 418 419 def reload 420 @connection.reset 421 end </code></p><p><code>options</code>で渡ってくる値が<code>nil</code>であれば<code>DEFAULT_</code>値が指定される．<br/> しかしここで<code>empty string</code>が渡ってくると，<code>@scheme</code>等の値が<code>empty string</code>になってしまう．<br/> その結果<code>@connection</code>の組立に失敗して，アップロード先が見つからねーと怒られるみたいです．</p><p>私の場合は，特にこれらの値の指定は不要だったため，<br/> 行ごとコメントアウトしたところ，うまくアップロードできるようになりました！:)</p><h2>References</h2><ul><li><a href="http://stackoverflow.com/questions/15717368/uploading-image-to-s3-using-carrierwave-and-fogs-bad-uri">[Stackoverflow] uploading image to s3 using carrierwave and fogs bad uri</a></li><li><a href="https://github.com/carrierwaveuploader/carrierwave">[GitHub] CarrierWave</a></li></ul><p><section class="ads"><div class="amzimg"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4774146633/lunchub-22/" rel="nofollow" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51%2BUj1CI5tL._SX280_CR0,0,280,230_.jpg" alt="Ruby on Rails 3 アプリケーションプログラミング"/></a></div><div class="amzimg"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4797363827/lunchub-22/" rel="nofollow" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51hvKPIWmdL._SX280_CR2,75,278,230_.jpg" alt="Rails3レシピブック 190の技"/></a></div></section></p> ]]></content> </entry> <entry><title type="html"><![CDATA[CarrierWaveでアップロード先をAmazon S3に設定する方法]]></title><link href="http://lunchub.github.io/blog/2013/07/14/how-to-use-carrierwave-with-amazon-s3/"/> <updated>2013-07-14T17:25:00+09:00</updated> <id>http://lunchub.github.io/blog/2013/07/14/how-to-use-carrierwave-with-amazon-s3</id> <content type="html"><![CDATA[<h2>Environment</h2><p><code> Mac OSX 10.7.5 (Lion) ruby 1.9.3p392 (2013-02-22 revision 39386) [x86_64-darwin11.4.2] Rails 3.2.13 [Gems] CarrierWave (0.8.0) fog (1.12.1) </code></p><h2>Precondition</h2><ul><li><p><code>Amazon S3</code>を利用するためには，<code>Amazon Web Services (AWS)</code>への登録が必要です．</p><ul><li><a href="/blog/2013/07/13/how-to-register-for-aws/">AWSへの登録記事はこちら</a></li></ul></li><li><p><code>CarrierWave</code>の設定時に，<code>Amazon S3</code>のBucket情報が必要なため，Bucketが作成されていなければなりません．</p><ul><li><a href="/blog/2013/07/14/how-to-create-bucket-on-amazon-s3/">Amazon S3にBucketを作成する方法はこちら</a></li></ul></li></ul><h2>Issues</h2><p>CarrierWaveのアップロード先をAmazon S3に設定したい．</p><p>Herokuを使ってRailsアプリを運用しているものの, Herokuではファイルをサーバ上に保存することができないため，<br/> 画像アップロード等は別のサーバに行う必要があります．<br/> そこで今回は，非常に低価格でクラウドストレージを扱うことのできる<code>Amazon S3</code>をアップロード先に指定しました．</p><h2>How to</h2><h3>Gemを追加する</h3><p><code>text Gemfile gem "fog", "~&gt; 1.3.1" </code></p><h3>initializerを追加する</h3><p>ここに<code>Amazon S3</code>の情報を設定します．<br/> ``` ruby config/initializer/carrierwave.rb CarrierWave.configure do |config| config.fog_credentials = {</p><pre><code>:provider               =&gt; 'AWS',                           # required
:aws_access_key_id      =&gt; ENV["AWS_S3_KEY_ID"],            # required
:aws_secret_access_key  =&gt; ENV["AWS_S3_SECRET_ACCESS_KEY"], # required
:region                 =&gt; 'ap-northeast-1',                # optional,  defaults to 'us-east-1'
# :host                   =&gt; '',                              # optional,  defaults to nil
# :endpoint               =&gt; ''                               # optional,  defaults to nil
</code></pre><p> } config.fog_directory = ‘myapp-carrierwave’ # required config.fog_public = false # optional, defaults to true config.fog_attributes = {‘Cache-Control’=>‘max-age=82800’} # optional, defaults to {} end ```</p><ul><li>IDとシークレットアクセスキーは，環境変数に設定しておいたほうが良いです．<ul><li>ベタ書きだとGitHubにソースコードをアップしている際等に危険です．</li></ul></li><li><code>:region</code>の入力は任意ですが，'tokyo'リージョンを使用している場合は変更が必要です． => <code>ap-northeast-1</code></li><li><code>config.fog_directory</code>はBucketの名前です．</li><li><code>config.fog_public</code>は<code>false</code>に設定しておくことで，Rails経由でのアクセスしか<code>Amazon S3</code>上のファイルにアクセスできなくなります．</li></ul><h3>Uploaderクラスのプロパティ値を変更する</h3><p>``` ruby APP_ROOT_PATH/app/uploaders/image_uploader.rb</p><h1>encoding: utf-8</h1><p>class ImageUploader &lt; CarrierWave::Uploader::Base # storage :file storage :fog end ```</p><h2>References</h2><p><a href="https://github.com/carrierwaveuploader/carrierwave">[GitHub] carrierwave</a></p><p><section class="ads"><div class="amzimg"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4774146633/lunchub-22/" rel="nofollow" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51%2BUj1CI5tL._SX280_CR0,0,280,230_.jpg" alt="Ruby on Rails 3 アプリケーションプログラミング"/></a></div><div class="amzimg"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4797363827/lunchub-22/" rel="nofollow" target="_blank"><img src="http://ecx.images-amazon.com/images/I/51hvKPIWmdL._SX280_CR2,75,278,230_.jpg" alt="Rails3レシピブック 190の技"/></a></div></section></p> ]]></content> </entry> <entry><title type="html"><![CDATA[Rails + Unicornの環境でNew Relicにデータが送信されない]]></title><link href="http://lunchub.github.io/blog/2013/06/26/hamari-on-installing-new-relic-to-rails-with-unicorn/"/> <updated>2013-06-26T18:38:00+09:00</updated> <id>http://lunchub.github.io/blog/2013/06/26/hamari-on-installing-new-relic-to-rails-with-unicorn</id> <content type="html"><![CDATA[<h2>Environment</h2><p><code> お名前VPS CentOS 6.4 ruby 1.9.3p392 (2013-02-22 revision 39386) [x86_64-darwin11.4.2] Rails 3.2.13 Unicorn v4.5.0 </code></p><h2>Issues</h2><p>前回までの記事で、</p><ul><li><a href="/blog/2013/06/26/installing-new-relic-to-rails/">RailsにNew Relicをインストールする</a></li><li><a href="/blog/2013/06/26/installing-new-relic-to-centos/">CeontOSにNew Relicをインストールする</a></li></ul><p>と、簡単に<code>New Relic</code>のインストールを行なってきたものの、問題が発生した。</p><p><code>Rails + Unicorn</code>の環境で、何時まで経っても<code>New Relic</code>にRailsのデータが送信されていないというもの。</p><h2>Solution</h2><p>これは<code>Unicorn</code>を使っている場合に発生する問題で、以下の手段で解決できます。<br/> 今回は後者の手段で解決しました。</p><p>なぜ<code>Unicorn</code>の<code>preload_app</code>が必要なのかは理解出来ませんでした・・</p><h2>How to</h2><h3>Unicornの設定に追記する</h3><p><code>RAILS_APP_ROOT/config</code>ディレクトリにある<code>Unicorn</code>の設定ファイルに以下のディレクティブを追記する。 <code>text unicorn.rb preload_app true </code></p><h3>Railsのinitializerを追加する</h3><p><code>RAILS_APP_ROOT/config/initializers/</code>ディレクトリに以下のファイルを追加する ``` ruby new_relic.rb</p><h1>Ensure the agent is started using Unicorn.</h1><h1>This is needed when using Unicorn and preload_app is not set to true.</h1><h1>See <a href="https://newrelic.com/docs/ruby/no-data-with-unicorn">https://newrelic.com/docs/ruby/no-data-with-unicorn</a></h1><p>if defined? Unicorn ::NewRelic::Agent.manual_start() ::NewRelic::Agent.after_fork(:force_reconnect => true) end ``` ファイル名は何でもOKです。</p><h2>References</h2><ul><li><a href="https://newrelic.com/docs/ruby/no-data-with-unicorn">No Data with Unicorn</a></li><li><a href="http://unicorn.bogomips.org/Unicorn/Configurator.html#method-i-preload_app">Unicorn::Configurator</a></li></ul>]]></content> </entry> <entry><title type="html"><![CDATA[CentOSにNew Relicをインストールする]]></title><link href="http://lunchub.github.io/blog/2013/06/26/installing-new-relic-to-centos/"/> <updated>2013-06-26T17:12:00+09:00</updated> <id>http://lunchub.github.io/blog/2013/06/26/installing-new-relic-to-centos</id> <content type="html"><![CDATA[<h2>Environment</h2><p><code> お名前VPS CentOS 6.4 </code></p><h2>Issues</h2><ul><li>Railsのパフォーマンスを簡単に計測したい –> <a href="/blog/2013/06/26/installing-new-relic-to-rails/">Railsへの導入記事はこちら</a></li><li>ついでにサーバーのモニタリングもしたい</li><li>Muninとか自分で導入するのがめんどくさい</li></ul><h2>Solution</h2><p><a href="/blog/2013/06/26/installing-new-relic-to-rails/">前回の記事</a>に続いて、 <code>New Relic</code>をCentOSにインストールします。</p><p>インストール後は自動的にデータを収集してくれるので、<br/> こちらも非常に手軽に導入できます。</p><h2>How to</h2><p>基本的に管理画面に記載されている内容そのままで導入できます。<br/> <code>New Relic</code>にログイン後、サイドバーから<code>Servers</code>を選択し、さらに<code>RedHat or CentOS</code>を選択すると、<br/> 以下の画像のような表示になります。</p><p><a href="/images/posts/2013/06/2013-06-26-17-22-30.jpg"><img src="/images/posts/2013/06/2013-06-26-17-22-30.jpg" alt="newrelic admin panel image 2"/></a> <a href="/images/posts/2013/06/2013-06-26-17-28-04.jpg"><img src="/images/posts/2013/06/2013-06-26-17-28-04.jpg" alt="newrelic admin panel image 3"/></a></p><p>後はこの画面の通りにコマンドを実行するだけなのですが、<br/> 気をつける点として、以下を挙げておきます。</p><ul><li>インストールは<code>root</code>ユーザで行う</li><li><code>yum install</code>には<code>sudo</code>をつける</li></ul><p>特に2番目でハマりました。環境依存の問題もあると思いますが、<br/> <code>yum install</code>で<code>newrelic</code>ユーザが作成されなかったために、<br/> <code>newrelic-sysmond start</code>が実行できませんでした。</p><p><code>yum install</code>で表示されていたエラー。 ``` bash [root@tmp]# yum install newrelic-sysmond Loaded plugins: fastestmirror Loading mirror speeds from cached hostfile epel/metalink | 5.8 kB 00:00 * base: www.ftp.ne.jp * epel: ftp.iij.ad.jp * extras: www.ftp.ne.jp * updates: www.ftp.ne.jp base | 3.7 kB 00:00 epel | 4.2 kB 00:00 extras | 3.4 kB 00:00 newrelic | 951 B 00:00 newrelic/primary | 2.1 kB 00:00 newrelic 5/5 updates | 3.4 kB 00:00 updates/primary_db | 3.1 MB 00:00 Setting up Install Process Resolving Dependencies —> Running transaction check —–> Package newrelic-sysmond.x86_64 0:1.2.0.257-1 will be installed —> Finished Dependency Resolution</p><p>Dependencies Resolved</p><p>==============================================================================================================================================================================================================================================</p><h1> Package Arch Version Repository Size</h1><p>Installing: newrelic-sysmond x86_64 1.2.0.257-1 newrelic 1.2 M</p><h1>Transaction Summary</h1><p>Install 1 Package(s)</p><p>Total download size: 1.2 M Installed size: 3.5 M Is this ok [y/N]: y Downloading Packages: newrelic-sysmond-1.2.0.257-1.x86_64.rpm | 1.2 MB 00:03 warning: rpmts_HdrFromFdno: Header V3 DSA/SHA1 Signature, key ID 548c16bf: NOKEY Retrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-NewRelic Importing GPG key 0x548C16BF: Userid : New Relic <a href="mailto:support@newrelic.com">support@newrelic.com</a> Package: newrelic-repo-5-3.noarch (installed) From : /etc/pki/rpm-gpg/RPM-GPG-KEY-NewRelic Is this ok [y/N]: y Running rpm_check_debug Running Transaction Test Transaction Test Succeeded Running Transaction Warning: RPMDB altered outside of yum. Installing : newrelic-sysmond-1.2.0.257-1.x86_64 1/1 groupadd: cannot lock /etc/group; try again later. useradd: group ‘newrelic’ does not exist warning: group newrelic does not exist – using root warning: user newrelic does not exist – using root warning: group newrelic does not exist – using root chown: invalid user: `newrelic:newrelic' su: user newrelic does not exist Verifying : newrelic-sysmond-1.2.0.257-1.x86_64 1/1</p><p>Installed: newrelic-sysmond.x86_64 0:1.2.0.257-1</p><p>Complete! ```</p><p>全然<code>Complete!</code>してねーよ！<code>groupadd</code>失敗してるやんけ・・</p> ]]></content> </entry> <entry><title type="html"><![CDATA[RailsにNew Relicをインストールする]]></title><link href="http://lunchub.github.io/blog/2013/06/26/installing-new-relic-to-rails/"/> <updated>2013-06-26T16:01:00+09:00</updated> <id>http://lunchub.github.io/blog/2013/06/26/installing-new-relic-to-rails</id> <content type="html"><![CDATA[<h2>Environment</h2><p><code> ruby 1.9.3p392 (2013-02-22 revision 39386) [x86_64-darwin11.4.2] Rails 3.2.13 </code></p><h2>Issues</h2><ul><li>Railsのパフォーマンスを簡単に計測したい</li><li>ついでにサーバーのモニタリングもしたい –> <a href="/blog/2013/06/26/installing-new-relic-to-centos/">CentOSへの導入記事はこちら</a></li><li>Muninとか自分で導入するのがめんどくさい</li></ul><h2>Solution</h2><p><a href="https://newrelic.com/">New Relic</a>というサービスを利用する。<br/> <code>New Relic</code>は簡単に導入が出来て、無料で使えるモニタリングサービス。<br/> ※但し無料版はログの保存期間が24時間しかない。</p><p>別途プラグインの導入を行うことで、サーバーのモニタリングも簡単にできます。</p><h2>How to</h2><h3><code>New Relic</code>のアカウントを取得する</h3><p><code>New Relic</code>のサイトで<a href="https://newrelic.com/">会員登録</a>を行う。</p><h3>Gemをインストールする</h3><p><code>ruby Gemfile gem 'newrelic_rpm' </code> 設定ファイルで<code>Environment</code>に応じたモニタリングのON/OFFができるので、<br/> ここでは<code>production</code>グループに纏めたりしなくても良いと思います。</p><h3>configディレクトリに<code>newrelic.yml</code>を配置する</h3><p><code>newrelic.yml</code>は<code>New Relic</code>にログイン後、サイドバーから<code>Applications</code>を選択し、さらに<code>Add more</code>を選択するとダウンロード出来る画面へ遷移する。</p><p><a href="/images/posts/2013/06/2013-06-26-16-38-43.jpg"><img src="/images/posts/2013/06/2013-06-26-16-38-43.jpg" alt="newrelic admin panel image"/></a></p><p>画面遷移した後に、<code>Installation instructions for</code>で<code>Ruby</code>を選択すると、<br/> 下の画像のようにダウンロードボタンが出現する。</p><p><a href="/images/posts/2013/06/2013-06-26-16-50-31.jpg"><img src="/images/posts/2013/06/2013-06-26-16-50-31.jpg" alt="newrelic admin panel image"/></a></p><p>ダウンロードしてきた<code>newrelic.yml</code>を<code>RAILS_APP_ROOT/config</code>に配置すればOK!</p><h2>Tips</h2><p><code>newrelic.yml</code>の以下の部分を書き換えることで、<br/> 管理画面に表示されるアプリ名を変更できます。 <code>yaml newrelic.yml app_name: My Application </code></p> ]]></content> </entry> </feed>